<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPoAAAC2CAMAAADHqGAYAAAABGdBTUEAALGPC/xhBQAAAMBQTFRF5ubm
        ////SEhI7Ozspez/jOf/9Pz/CwsLIiIiPtj/9PT0WFhY/Pz8+v7/8Pz/tvD/AAAA3t7eyPP/FBQUioqK
        hISEDAwMXFxcUlJSvLy82NjYZGRkoKCgOjo68PDwysrKenp63vj/xMTEcnJyGBgYLi4urq6umJiYAMz/
        Hx8fNDQ0fHx8pqamTExMaWlpKCgoXt7/ItL/d+P/1Pb/vfH/N32OCS43Ch0hMVRd4+/ytcLFaKu8FHGI
        GUlVi97zqeLxU3HQfAAADMlJREFUeF7tnQt7ojoagAl2CsV0CsM9XCuCghfamdk9e/Z2/v+/2gCpWy3Y
        EKyEPn2fZyxYlbz9EmSSL0EAFyaR8jyX9pDsDkCQSydFZOcDuLx6oChhZrlkdwCaG2YLsv0RfIB69bj0
        AYgSO4kAmJl2gmMHM8/LmrqwyDIv1qqNvefjp0LDXi0ysNjiVxkIQHfvbSEQDJTY1TvI51ycy6sXgqD5
        OQKuHq/mlqYEtr/XEdjkppEb9UsMPfBtWQO+vlmlewgD0Z8vbWCKWH2ZgdVyY5QJiKxik1h+/TmOfvFy
        foS6quuWmkDgmxDM8kzTFziWmqBnAGR6WL3EWApACcywXAGArCirdw/qSl1jdC2yMgDnHljhv1eoX6AB
        nfIBUUco8pe4vEJmOlKm7HRnJQBX2iexJ9UV18COIN4h1UviRNpu6t2DOpLsOEmsLKoincxfPqd642W5
        vHrd1uNU2epB4uP6C7e2rLuZtTExVQsHhoMfNiJSk+qpKK7UTaKuZ5FUP40ia4Y/zcbNQkz8qs5cmg9S
        3xdKgSu9tswEA4JQ9CILB1wwmgqfQgCdRKhqMTQEX1YAtLE6fmcoZbPq2yE0BKIO0xif8qahXvq+n1gG
        COah4KlbLTdCVBr4XIaEOXbGGJIZ+ssIemk0S3IhzOPZ1rIB/kbUPFyz7SIS9nn4oh7YoWCr+Ox/aS6u
        bqSYHf7OioI8XXkGcItcjhUg2HLuNBcoRmnnBQ5jmMh5gCtDJOaiaAMlyWXTXoBwL+diBFCAq4gRg0Ug
        48/BZ8RLM1D9/pZstAAF5ehnOCOXeEYAZ0dPQQHiRo0vAer28OqVNS/vP+LcgSkZqP74g2z0wahPB8fs
        K/UeMB34mEuo9w2Aa5KNV/g9anR1PC7U72+evpO963D7dHPLg/rvh7v18/fba/L9ef1882t89ac15u66
        VId84qDC/3jCUb+/JrfP67vffLT1H0/Dv2j6cP/z9z0fp7lx+FIfwpc6K1/q1+dLfQhf6qx8qV+fL/Uh
        DFZXxuED1O9/P/Thb3+XxuGPf7T0WvXjTdS/Y26+VY8U/PmHPB+HQPVJgZlpq/D3d8+U/S4LKRbGAS0L
        0ofJTJv6zXr9jWy+gyFlpChXxxwc9hb127v1mjLscwuRklwdlJcDw96i/uvu+fnuN9k5i5KmpCAjYKoD
        hyVa1O/vb77dk+3zIMsj5RgBVMrDTvJtbR3cUDb1TF2RcoyBoTaZCqwMUk/UiBRjDDS5nJGCMDFEHQay
        RooxCgPDPkR9ZjmkEOOgpfmQsA9RX6gmKcRIrAaFfYi6oY52QdOAimVr+ekYor7LxzzLVazUlkFbWgao
        wzwgJRgN3NrZwz5APZISUoLx8NX4dQJGLwao+6pPCjAeWsCeRzlAfS+N3dQxOOykOL1hV4dFSQ4/Jlpg
        1WmIDLCra/qcHH5UtlJCCtQXdnVXNcjRxyXQGacLsKtv1AU5+LhkKuOUC2Z1uFuO1kNzjGixhZ1ZXVmK
        5NBjk0keKVM/mNUjdazO2Dfs2MLOrL5St+TIo4PDztLamdVtnYMLGsKuSrbvDas6LItRe2iOcCWbIeys
        6tqYnbFvcJpJNf1gVR+3M/YU15qTcvWAVT2W+LigIcyl/vMgGdVhsCQH5QNXcnq3dkZ1Id+Rg3KC3T/s
        jOoLdUOOyQkLa9c37Izqo3fGvsFT+4adTR2OOLrcwUIXe4adTV0pA34uaAie1HPKL5u6pu7JAfkhssR+
        g85s6lsOOmPfsFf7TXxlU99bXF3QNER60Ku1s6kXJXdNHZP0CzuTujDy6HIH0bLoE3YmdXfs0eUOEqnP
        XG8mdXO8dLmzID3ocZJnUt/pPDZ1TNxnij+L+kwefXS5A5Sn9GFnUedhdLmDTY+ws6j7/HTGnoLkkjrs
        LOoeD6PLHfRIH2VQh0XK6VkOg1s7bdYwg7og2eQ4PGJQh51BnZfR5XZQKVOGnUF9I7nkMFxCHXYGdVHm
        rYfmCFRSpo/2V1d0XkaXO6DNGu6vHo021YcSrZRbrU5pfdGPc9M/Vtx1xp5CmT5K9fc5wuauM/YUrdBp
        WjtRV4y6fbj4MTx/JTjqVB9K6MJO1CPdqraMAGjl+Yow6lQfSnDYKWozeUnsFFXYsXpU/w2OOOr14Wt0
        uQOq9NHGE+a+UfVrGcFsp4qRj+tL6EVKsi3mymJXpvH/G8G4U31oKZbvp4826u5SEKrBCyOAK2srJE7V
        H+EqaR4bSDcjXz9cIMGA7wsawrZazvUdGnXPAVD0DhX+oJ7gs4CBP2N3yEMN+eyMPYUma7hWF5Zzw9gt
        hTfq1YxZYZWI1kF99Kk+lFBkDdfqvuU4zs5avVYXclcp6nV8xU0mHj6Hv9HldrT300crdbirFnaE8+BF
        vVrUFlmN+l6EuIHv6xdjnOUUznKY97OGK3WtWdI8kyKsjqyVsNUzNFebCh+XWmgeslA5mOpDy7vJ4pX6
        Vqyv+0LR8G0APXkLvVw2nYXiZLjN73I5MV5ys5DE3+hyB++mj9Zt/RgF1/CXFV0xUHjV68HDVB9adtL5
        sLeon4OLqT6UZNL5tWn7qcNCJp87Bd7JGm5Vf/xFNk7R9Elc0BDeyRpuVe/speG7M/YN57OG+6mbKted
        saecTx/tpc7PVB9K5uqZsPdS52eqDyXuufTRXupI5XZ0uQP7TB5hL3WOR5c7WEjdYe+l7nE01YeSM+mj
        fdRhyX9n7CkLqzNruI+6ZvE8utyBp3aFvY96Nq0LmoZFZ/poH/WY79HlDvZdN0nqoQ5FnXzapIisjjzC
        HupCPrELGkJX1nAP9Yi3qT6UdGUN91Dnf3S5g46w06tD/keXO4jyoq2106vzONWHkk3r6qP06oLK/+hy
        B0hvW3SWXn0So8sdtIadXj3hcaoPJShvyRqmVw/KiZ7lKtrWGqZWn02qM/YUVL5da5ha3ZWmMbrcQUse
        IbX6VEaXO9DyN4vOUqs71lS/1Rvehp1WPSwnM7rcDkqXJ62dVn1Co8sdvAk7rfqURpfbebP6KK36lEaX
        OzhNH6VU53qqDy3lcdgp1WcSFwtJDuMkfZRSfWKjy+1owVH+L6W6OcnO2FOOw06pLuYT/r/LAS3QX6WP
        0qlPbnS5g6OsYTp1jucu9+N12OnUOVpIchiZekh5pVS3pc/Q1DGaKB3CTqU+hak+lGTSIexU6lOY6kOL
        eMgjpFKfcmfsKZn6kjVMpR5zsjL2RTiEnUYdcj53uR+uRDLcadQVi7OFJAehOWqTLE6jPtXR5Q5eFp2l
        UZ94Z+wbHKtehpJGfT6VqT6ULJqsYQp1KBfkPZ+FZq3hFvX6Boav7mCIrKl3xp7S5BG2qJ/etnL7iS5o
        CHa16GyL+unNSpPpd8aeUi8629bWH9brG7KJgUFO3vCJqLKG29SPb0wsLKc8utxBJInwjXp1l+mj21H/
        U5LFz4cuuafq9w83J/zr3/Jn5D9eW4U/Rvnv7DPy15/vq4PjS7vPwsPtl/o5vtQ/GddTR3uMeXZm8XvM
        kiG3IT7leuqu5Hh2oA9x11hv19fKFdWrER9FrNcDCZXqv8tQaXI3lXqvBoYQQoD/4d/gX+Pn8W7zMrxb
        qzdPX4ArqwMbq2diWuLLCc1O030I4KooHVIXFkG5MzbA3+zSCDlpuYtA5BlpmShA2aRFbCEg7NM0acly
        7s8V1a1Vlpl5hKutgdzcBPYcLUoTrPIMJU02n5Zv0EpyQGwlK63wUCTuIG4nUaZvgSG7UaAixRGjKGC8
        V+MxV1RXl/lST7G6j+vw3IOiLUAkwNRQoFCvegSMFFf2OVZPcZT9GVBWqeJKuIBiDMtVNdyLIgspcPF6
        kJyZ61Z4KHhlCBaxU+geyGRLNEJBL4MgsOpkB686EZhYvZqBq5l2kGP1anVQJxb0qmshR5lUBEFxblI6
        Nddu65EVLXTPj+YeNsn2+lxYGgtMHca9gx82lTr+ZSmuFkaljhu2E890t1HX3erlbTNZ+nJldbjStSTA
        FT7wFA/HcSUrBQ54aNfTTrdLXMmLRj2TFACTgzooTIjbDEJVN3I0pyj0u1xRXZp73s5KgK/7rrd04D7d
        ZgGu97qZzZs1HRUxMHd6ox7ppmvKefiini2NbSEh6JX+NmW6SeUp11NHe8/z4gyfyAxx57sbEBqiaOLQ
        ZnNxTy5VZsbexw0+w6c0mO1EEyUzVK1vuMrwvrPbxgJQ8LuMS9T3K6q/Al+mvP75sgtc/KUFg5dkzsPT
        hJfd0+dZGUW9C5Tbxry85MXqOajVvz822x8KMvcGRXkG81h1ulKqP357vlbor8HD889HSvVvz+v1E+mk
        /Az8XK+ff95QqeOXrp++fR6eah/KCv/zk1X4p1/0p7lfXcuwTZHHX/ecfbldl4fb/wH8ano+VkSaOwAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>